plugins {
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'application'
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

ext{
    mainClass = 'client.gui.ApprovalClientMain'
}

application {
    mainClassName = mainClass
}

dependencies {
    compile files(fileTree(dir: 'lib', includes: ['*.jar']))
}

jar {
    archiveFileName = 'loan-client.jar' // name of the generated .jar file

    manifest {    // class where the main method is
        attributes 'Main-Class': mainClass
    }
    // add all dependencies to the executable .jar file
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

// code below creates clientModel.jar with classes from package client/model/*
// and copies clientModel.jar to the lib folder in Broker.
ext {
    modelPackage = 'client/model/*' // package from which the .jar file will be created
    modelJarName = "clientModel.jar" // name of the .jar file
    modelSourcePath = "${buildDir}/libs/" + modelJarName // absolute path of created .jar file
    modelDestPath = "${rootProject.projectDir}/travel-refund-broker/lib/" // path of the LIB folder in broker application
}

task createModelJar(type: Jar, dependsOn: compileJava) {
    archiveName = modelJarName
    from sourceSets.main.output
    include modelPackage
    print 'created ' + modelSourcePath + ' with classes from ' + modelPackage
}

task copyModelJarToBroker(type: Copy,dependsOn:[createModelJar]) {
    from modelSourcePath
    into modelDestPath
    print 'copied '+ modelSourcePath + ' into ' + modelDestPath
}
