plugins {
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'application'
}

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

ext{
    mainClass = 'approval.gui.ApprovalMain'
}

application {
    mainClassName = mainClass
    /*
    run application with 2 arguments REQUEST_QUEUE and APPROVAL_NAME
    gradlew bank:run --args="REQUEST_QUEUE APPROVAL_NAME"
    gradlew bank:run --args "financeRequestQueue Financial_Department"
    gradlew bank:run --args "administrationRequestQueue Internship_Administration"
    */
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.6'
    compile group: 'org.apache.activemq', name: 'activemq-client', version: '5.15.12'
    compile files(fileTree(dir: 'lib', includes: ['*.jar']))
}

/*
run bank.jar file with 2 arguments REQUEST_QUEUE and BANK_NAME

java -jar --module-path c:\myTools\javafx-sdk-11.0.2\lib\ --add-modules javafx.controls,javafx.fxml bank.jar financeRequestQueue Financial_Department
java -jar --module-path c:\myTools\javafx-sdk-11.0.2\lib\ --add-modules javafx.controls,javafx.fxml bank.jar administrationRequestQueue Internship_Administration
*/
jar {
    archiveFileName = 'approval.jar' // name of the generated .jar file

    manifest {    // class where the main method is
        attributes 'Main-Class': mainClass
    }
    // add all dependencies to the executable .jar file
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}


task runFINANCIAL(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    //if you have error message about missing modules in java FX, uncomment this line:
    // jvmArgs = ['--module-path', classpath.asPath,'--add-modules', 'javafx.controls,javafx.fxml']
    main = mainClassName
    args "financeRequestQueue", "Financial Department"
}

task runINTERSHIP_ADMIN(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    //if you have error message about missing modules in java FX, uncomment this line:
    // jvmArgs = ['--module-path', classpath.asPath,'--add-modules', 'javafx.controls,javafx.fxml']
    main = mainClassName
    args "administrationRequestQueue", "Internship Administration"
}

task runTHIRD_RANDOM(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    //if you have error message about missing modules in java FX, uncomment this line:
    // jvmArgs = ['--module-path', classpath.asPath,'--add-modules', 'javafx.controls,javafx.fxml']
    main = mainClassName
    args "thirdRandomQueue", "THIRD RANDOM"
}

/**
 * To create IntelliJ run 3 configurations as Gradle run task add as Arguments:
 * -PappArgs="['financeRequestQueue', 'Financial Department']"
 * -PappArgs="['administrationRequestQueue', 'Internship Administration']"
 */
run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

// code below creates approvalModel.jar with classes from package approval/model/*
// and copies approvalModel.jar to the lib folder in Broker.
ext {
    modelPackage = 'approval/model/*' // package from which the .jar file will be created
    modelJarName = "approvalModel.jar" // name of the .jar file
    modelSourcePath = "${buildDir}/libs/" + modelJarName // absolute path of created .jar file
    modelDestPath = "${rootProject.projectDir}/travel-refund-broker/lib/" // path of the LIB folder in broker application
}

task createModelJar(type: Jar, dependsOn: compileJava) {
    archiveName = modelJarName
    from sourceSets.main.output
    include modelPackage
    print 'created ' + modelSourcePath + ' with classes from ' + modelPackage
}

task copyModelJarToBroker(type: Copy,dependsOn:[createModelJar]) {
    from modelSourcePath
    into modelDestPath
    print 'copied '+ modelSourcePath + ' into ' + modelDestPath
}

